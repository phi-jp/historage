{"version":3,"sources":["src/historage.js","index.js"],"names":["Historage","id","_data","key","new_key","getKey","item","localStorage","getItem","JSON","parse","value","value_str","stringify","setItem","module","exports","require","default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;IAIqBA;;;AACnB,2BAAkB;AAAA,QAALC,EAAK,QAALA,EAAK;;AAAA;;AAChB,SAAKA,EAAL,GAAUA,EAAV;AAEA,SAAKC,KAAL,GAAa,EAAb;AACD;;;;wBAEGC,KAAK;AACP,UAAIC,OAAO,GAAG,KAAKC,MAAL,CAAYF,GAAZ,CAAd;;AACA,UAAI,CAAC,KAAKD,KAAL,CAAWE,OAAX,CAAL,EAA0B;AACxB,YAAIE,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,OAArB,CAAX;AACA,aAAKF,KAAL,CAAWE,OAAX,IAAsBE,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAH,GAAsB,IAAhD;AACD;;AAED,aAAO,KAAKJ,KAAL,CAAWE,OAAX,CAAP;AACD;;;wBAEGD,KAAKQ,OAAO;AACd,UAAIP,OAAO,GAAG,KAAKC,MAAL,CAAYF,GAAZ,CAAd;AACA,WAAKD,KAAL,CAAWE,OAAX,IAAsBO,KAAtB,CAFc,CAId;;AACA,UAAIC,SAAS,GAAGH,IAAI,CAACI,SAAL,CAAeF,KAAf,CAAhB;AACA,UAAIL,IAAI,GAAGC,YAAY,CAACO,OAAb,CAAqBV,OAArB,EAA8BQ,SAA9B,CAAX;AACD;;;yBAEIT,KAAK;AACR,UAAIC,OAAO,GAAG,KAAKC,MAAL,CAAYF,GAAZ,CAAd;AACA,UAAIS,SAAS,GAAGH,IAAI,CAACI,SAAL,CAAeF,KAAf,CAAhB;AACA,UAAIL,IAAI,GAAGC,YAAY,CAACO,OAAb,CAAqBV,OAArB,EAA8BQ,SAA9B,CAAX;AACD;;;2BAEMT,KAAK;AACV,aAAO,KAAKF,EAAL,GAAU,GAAV,GAAgBE,GAAvB;AACD;;;;;;;AACF;;ACvCDY,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,OAA/C","file":"historage.js","sourceRoot":"","sourcesContent":["/*\n *\n */\n\nexport default class Historage {\n  constructor({id}) {\n    this.id = id;\n\n    this._data = {};\n  }\n\n  get(key) {\n    var new_key = this.getKey(key);\n    if (!this._data[new_key]) {\n      var item = localStorage.getItem(new_key);\n      this._data[new_key] = item ? JSON.parse(item) : null;\n    }\n\n    return this._data[new_key];\n  }\n\n  set(key, value) {\n    var new_key = this.getKey(key);\n    this._data[new_key] = value;\n\n    // ローカルストレージに保存\n    var value_str = JSON.stringify(value);\n    var item = localStorage.setItem(new_key, value_str);\n  }\n\n  sync(key) {\n    var new_key = this.getKey(key);\n    var value_str = JSON.stringify(value);\n    var item = localStorage.setItem(new_key, value_str);\n  }\n\n  getKey(key) {\n    return this.id + '_' + key;\n  }\n};","module.exports = require('./src/historage.js').default;\n"]}